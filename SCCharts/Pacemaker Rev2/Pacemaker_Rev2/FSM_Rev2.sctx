scchart Pacemaker_FMS {

input signal    VS, AS  // external
output signal    VP, AP  // internal

/**
       * NOTE: Is pre() okay?
       * Potential edge case where VS||VP is detected in the tick XX_Elapses, but does not register
       * (due to the bool XX_Elapsed not having updated).
       */
  region Timers {
    bool  PVARP_Elapsed = false, VRP_Elapsed = false
    bool  AEI_Elapsed = false, AVI_Elapsed = false
    bool  URI_Elapsed = false, LRI_Elapsed = false
    
    region rPVARP {
      initial state sPVARP {
        clock tPVARP          = 0
        const int   T_PVARP   = 10
        // 
        initial state Counting {
          entry do tPVARP = 0; PVARP_Elapsed = false
        }
        if tPVARP >= T_PVARP go to Elapsed
        // 
        final state Elapsed {
          entry do PVARP_Elapsed = true
        }
      }
      if ((VS||VP) && pre(PVARP_Elapsed)) abort to sPVARP
    }
    
    region rVRP {
      initial state sVRP {
        clock tVRP            = 0
        const int   T_VRP     = 6
        //
        initial state Counting {
          entry do tVRP = 0; VRP_Elapsed = false
        }
        if tVRP >= T_VRP go to Elapsed
        //
        final state Elapsed {
          entry do VRP_Elapsed = true
        }
      }
      if ((VS||VP) && pre(VRP_Elapsed)) abort to sVRP
    }
    
    region rAEI {
      initial state sAEI {
        clock tAEI        = 0
        const int T_AEI   = 6
        //
        initial state Counting {
          entry do tAEI = 0; AEI_Elapsed = false
        }
        if tAEI >= T_AEI go to Elapsed
        //
        final state Elapsed {
          entry do AEI_Elapsed = true
        }
      }
      if ((VS||VP) && pre(VRP_Elapsed)) abort to sAEI
    }
    
    region rAVI {
      initial state sAVI {
        clock tAVI      = 0
        const int T_AVI = 4
        //
        initial state Counting {
          entry do tAVI = 0; AVI_Elapsed = false
        }
        if tAVI >= T_AVI go to Elapsed
        //
        final state Elapsed {
          entry do AVI_Elapsed = true
        }
      }
      if ((AS||AP) && pre(PVARP_Elapsed)) abort to sAVI
    }
    
    region rRI {
      initial state sRI {
        clock tRI       = 0
        const int T_URI = 12
        const int T_LRI = 16
        //
        initial state Start {
          entry do tRI = 0; URI_Elapsed = false; LRI_Elapsed = false
        }
        if tRI >= T_URI go to URI_Fin
        //
        state URI_Fin {
          entry do URI_Elapsed = true
        }
        if tRI >= T_LRI go to LRI_Fin
        //
        state LRI_Fin {
          entry do LRI_Elapsed = true
        }
      }
      if ((VS||VP) && pre(VRP_Elapsed)) abort to sRI
    }
  }
  
}
